volumes:
  n8n_storage:
  postgres_storage:
  ollama_storage:
  qdrant_storage:

networks:
  onprem:

x-n8n: &service-n8n
  image: n8nio/n8n:latest
  networks: ['onprem']
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENCRYPTION_KEY
    - N8N_USER_MANAGEMENT_JWT_SECRET
    # - N8N_SECURE_COOKIE=false
  links:
    - postgres

services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    networks: ['onprem']
    restart: unless-stopped
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n-import:
    <<: *service-n8n
    container_name: n8n-import
    entrypoint: /bin/sh
    command:
      - "-c"
      - "n8n import:credentials --separate --input=/backup/credentials && n8n import:workflow --separate --input=/backup/workflows"
    volumes:
      - ./n8n/backup:/backup
    depends_on:
      postgres:
        condition: service_healthy

  n8n:
    <<: *service-n8n
    container_name: n8n
    restart: unless-stopped
    expose:
      - 5678
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n/backup:/backup
      - ./shared:/data/shared
    depends_on:
      postgres:
        condition: service_healthy
      n8n-import:
        condition: service_completed_successfully
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`n8n.motivation-inc.com`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls.certresolver=letsencrypt"
      - "traefik.http.routers.n8n.tls.domains[0].main=n8n.motivation-inc.com"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    networks: ['onprem']
    restart: unless-stopped
    # ports:
    #   - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage

  # ollama:
  #   image: ollama/ollama:latest
  #   container_name: ollama
  #   networks: ['onprem']
  #   restart: unless-stopped
  #   ports:
  #     - 11434:11434
  #   expose:
  #     - 11434
  #   volumes:
  #     - ollama_storage:/root/.ollama
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.ollama.rule=Host(`ollama.motivation-inc.com`)"
  #     - "traefik.http.routers.ollama.entrypoints=websecure"
  #     - "traefik.http.routers.ollama.tls.certresolver=letsencrypt"
  #     - "traefik.http.routers.ollama.tls.domains[0].main=ollama.motivation-inc.com"
  #     - "traefik.http.services.ollama.loadbalancer.server.port=11434"

  # init-ollama:
  #   image: ollama/ollama:latest
  #   networks: ['onprem']
  #   container_name: ollama-pull-llama
  #   depends_on:
  #     - ollama
  #   volumes:
  #     - ollama_storage:/root/.ollama
  #   entrypoint: /bin/sh
  #   command:
  #     - "-c"
  #     - "sleep 3; OLLAMA_HOST=ollama:11434 ollama pull llama3.2"

  traefik:
    container_name: traefik
    image: public.ecr.aws/docker/library/traefik:v3.2
    env_file:
      - .env
    restart: unless-stopped
    networks: ['onprem']
    depends_on:
      - n8n
      # n8n:
      #   condition: service_healthy
    ports:
      - 80:80
      - 443:443
      # - 8080:8080  # Add this line to expose the dashboard port
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=route53"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.email=britchie@ridgetech.biz"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certResolver=letsencrypt"
      # - "--entrypoints.websecure.http.tls.domains[0].main=n8n.motivation-inc.com"
      # - "--entrypoints.websecure.http.tls.domains[0].main=traefik.n8n.motivation-inc.com"
      - "--serversTransport.insecureSkipVerify=true"
      # # Enable the dashboard
      # - "--api.dashboard=true"
      # - "--api.insecure=false"
      # # Dashboard routing
      # - "--entrypoints.dashboard.address=:8080"
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.dashboard.rule=Host(`traefik.n8n.motivation-inc.com`)"
    #   - "traefik.http.routers.dashboard.entrypoints=websecure"
    #   - "traefik.http.routers.dashboard.service=api@internal"
    #   - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
    #   - "traefik.http.middlewares.auth.basicauth.users=__TRAEFIK_DASHBOARD_HASHED_PASS__"
    #   - "traefik.http.routers.dashboard.middlewares=auth"

